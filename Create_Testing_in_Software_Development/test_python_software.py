{
    "test_file": "Create_Testing_in_Software_Development/test_python_software.py",
    "timestamp": "2024-09-01T19:26:28.849823",
    "status": "failure",
    "details": "============================= test session starts =============================\nplatform win32 -- Python 3.9.1, pytest-8.3.2, pluggy-1.5.0\nrootdir: C:\\Users\\ualer\\Downloads\\Saas do site\\A-I-O-R-G\nplugins: anyio-4.3.0, dash-2.14.2, Faker-22.4.0, json-report-1.5.0, metadata-3.1.1, typeguard-4.2.1\ncollected 2 items\n\nCreate_Testing_in_Software_Development\\test_python_software.py EF        [100%]\n\n=================================== ERRORS ====================================\n____________________ ERROR at setup of test_download_vods _____________________\nfile C:\\Users\\ualer\\Downloads\\Saas do site\\A-I-O-R-G\\Create_Testing_in_Software_Development\\test_python_software.py, line 3\n  def test_download_vods(video_urls, extract_audio=False):\nE       fixture 'video_urls' not found\n>       available fixtures: _session_faker, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, dash_br, dash_duo, dash_duo_mp, dash_multi_process_server, dash_process_server, dash_thread_server, dashjl, dashjl_server, dashr, dashr_server, diskcache_manager, doctest_namespace, faker, include_metadata_in_junit_xml, json_metadata, metadata, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nC:\\Users\\ualer\\Downloads\\Saas do site\\A-I-O-R-G\\Create_Testing_in_Software_Development\\test_python_software.py:3\n================================== FAILURES ===================================\n__________________________________ test_main __________________________________\n\n    def test_main():\n        print(\"Bem-vindo ao Downloader de VODs da Twitch!\")\n>       urls = input(\"Insira as URLs ou IDs dos VODs separados por v\u00edrgula: \").split(',')\n\nCreate_Testing_in_Software_Development\\test_python_software.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <_pytest.capture.DontReadFromInput object at 0x000001E669CBD880>\nsize = -1\n\n    def read(self, size: int = -1) -> str:\n>       raise OSError(\n            \"pytest: reading from stdin while output is captured!  Consider using `-s`.\"\n        )\nE       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_pytest\\capture.py:208: OSError\n---------------------------- Captured stdout call -----------------------------\nBem-vindo ao Downloader de VODs da Twitch!\nInsira as URLs ou IDs dos VODs separados por v\u00edrgula: \n=========================== short test summary info ===========================\nFAILED Create_Testing_in_Software_Development/test_python_software.py::test_main\nERROR Create_Testing_in_Software_Development/test_python_software.py::test_download_vods\n========================= 1 failed, 1 error in 2.24s ==========================\n"
}